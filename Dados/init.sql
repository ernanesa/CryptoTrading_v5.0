-- Init script for CryptoTrading_DB
-- This file is executed when the PostgreSQL container starts for the first time

-- Create database if it doesn't exist (though it's created via environment variables)
-- The database is already created by POSTGRES_DB environment variable

-- Migration script based on EF Core InitialCreate migration
-- Execute this script in PostgreSQL to create the required tables

-- Create Symbols table
CREATE TABLE IF NOT EXISTS "Symbols" (
    "Symbol" text NOT NULL,
    "BaseCurrency" text NOT NULL,
    "QuoteCurrency" text NOT NULL,
    "Status" text NOT NULL,
    "BasePrecision" integer NOT NULL,
    "QuotePrecision" integer NOT NULL,
    "AmountPrecision" integer NOT NULL,
    "MinOrderAmount" numeric NOT NULL,
    "MinOrderValue" numeric NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Symbols" PRIMARY KEY ("Symbol")
);

-- Create Tickers table
CREATE TABLE IF NOT EXISTS "Tickers" (
    "Symbol" text NOT NULL,
    "Last" numeric NOT NULL,
    "High" numeric NOT NULL,
    "Low" numeric NOT NULL,
    "Vol" numeric NOT NULL,
    "Buy" numeric NOT NULL,
    "Sell" numeric NOT NULL,
    "Date" bigint NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Tickers" PRIMARY KEY ("Symbol")
);

-- Create OrderBooks table
CREATE TABLE IF NOT EXISTS "OrderBooks" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Symbol" text NOT NULL,
    "Bids" text NOT NULL,
    "Asks" text NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_OrderBooks" PRIMARY KEY ("Id")
);

-- Create Trades table
CREATE TABLE IF NOT EXISTS "Trades" (
    "Tid" integer NOT NULL,
    "Symbol" text NOT NULL,
    "Date" bigint NOT NULL,
    "Price" numeric NOT NULL,
    "Type" text NOT NULL,
    "Amount" numeric NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Trades" PRIMARY KEY ("Tid")
);

-- Create Candles table
CREATE TABLE IF NOT EXISTS "Candles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Symbol" text NOT NULL,
    "Resolution" text NOT NULL,
    "Timestamp" bigint NOT NULL,
    "Open" numeric NOT NULL,
    "High" numeric NOT NULL,
    "Low" numeric NOT NULL,
    "Close" numeric NOT NULL,
    "Volume" numeric NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Candles" PRIMARY KEY ("Id")
);

-- Create AssetFees table
CREATE TABLE IF NOT EXISTS "AssetFees" (
    "Asset" text NOT NULL,
    "WithdrawalFee" numeric NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_AssetFees" PRIMARY KEY ("Asset")
);

-- Create AssetNetworks table
CREATE TABLE IF NOT EXISTS "AssetNetworks" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Asset" text NOT NULL,
    "Network" text NOT NULL,
    "IsDefault" boolean NOT NULL,
    "WithdrawalFee" numeric NOT NULL,
    "MinWithdrawalAmount" numeric NOT NULL,
    "WithdrawalEnabled" boolean NOT NULL,
    "CollectedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_AssetNetworks" PRIMARY KEY ("Id")
);

-- Create indexes
CREATE INDEX IF NOT EXISTS "IX_AssetNetworks_Asset_Network" ON "AssetNetworks" ("Asset", "Network");
CREATE INDEX IF NOT EXISTS "IX_Candles_Symbol_Resolution_Timestamp" ON "Candles" ("Symbol", "Resolution", "Timestamp");
CREATE INDEX IF NOT EXISTS "IX_Trades_Symbol_Date" ON "Trades" ("Symbol", "Date");

-- Create __EFMigrationsHistory table for EF Core tracking
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" varchar(150) NOT NULL,
    "ProductVersion" varchar(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

-- Insert migration records
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion") VALUES ('20250901233454_InitialCreate', '9.0.0');
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion") VALUES ('20250309000000_FixTradesTable', '9.0.0');

-- You can add any additional initialization here if needed
-- For example, creating additional users, schemas, etc.

-- Note: EF Core migrations will handle table creation automatically
