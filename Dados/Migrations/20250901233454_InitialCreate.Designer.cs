// <auto-generated />
using System;
using Dados.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dados.Migrations
{
    [DbContext(typeof(CryptoTradingDbContext))]
    [Migration("20250901233454_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dados.Entities.AssetFeeEntity", b =>
                {
                    b.Property<string>("Asset")
                        .HasColumnType("text");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("WithdrawalFee")
                        .HasColumnType("numeric");

                    b.HasKey("Asset");

                    b.ToTable("AssetFees");
                });

            modelBuilder.Entity("Dados.Entities.AssetNetworkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Asset")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MinWithdrawalAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("Network")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WithdrawalEnabled")
                        .HasColumnType("boolean");

                    b.Property<decimal>("WithdrawalFee")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Asset", "Network");

                    b.ToTable("AssetNetworks");
                });

            modelBuilder.Entity("Dados.Entities.CandleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Close")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Open")
                        .HasColumnType("numeric");

                    b.Property<string>("Resolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Symbol", "Resolution", "Timestamp");

                    b.ToTable("Candles");
                });

            modelBuilder.Entity("Dados.Entities.OrderBookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Asks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bids")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderBooks");
                });

            modelBuilder.Entity("Dados.Entities.SymbolEntity", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.Property<int>("AmountPrecision")
                        .HasColumnType("integer");

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BasePrecision")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("MinOrderAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MinOrderValue")
                        .HasColumnType("numeric");

                    b.Property<string>("QuoteCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuotePrecision")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Symbol");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("Dados.Entities.TickerEntity", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.Property<decimal>("Buy")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Last")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Sell")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Vol")
                        .HasColumnType("numeric");

                    b.HasKey("Symbol");

                    b.ToTable("Tickers");
                });

            modelBuilder.Entity("Dados.Entities.TradeEntity", b =>
                {
                    b.Property<int>("Tid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tid"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Tid");

                    b.ToTable("Trades");
                });
#pragma warning restore 612, 618
        }
    }
}
